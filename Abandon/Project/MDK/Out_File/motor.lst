C251 COMPILER V5.60.0,  motor                                                              17/07/23  20:21:51  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE motor
OBJECT MODULE PLACED IN .\Out_File\motor.obj
COMPILER INVOKED BY: E:\keil5\C251\BIN\C251.EXE ..\CODE\motor.c XSMALL INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE IN
                    -CDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\USER\in
                    -c;..\USER\src) DEBUG PRINT(.\Out_File\motor.lst) TABS(2) OBJECT(.\Out_File\motor.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "motor.h"
    3          
    4          
    5          void Encoder_init(void){
    6   1        ctimer_count_init(CTIM3_P04);
    7   1        ctimer_count_init(CTIM0_P34);
    8   1      }
    9          
   10          int16 encoder_get(CTIMN_enum pin)
   11          {
   12   1        int16 t;
   13   1        t=ctimer_count_read(pin);
   14   1        ctimer_count_clean(pin);
   15   1        return t;
   16   1      }
   17          void Motor_Init(void)
   18          {
   19   1          pwm_init(MotorA_N, MotorFre, 0);//引脚
   20   1          pwm_init(MotorB_N, MotorFre, 0);
   21   1          pwm_init(MotorB_P, MotorFre, 0);
   22   1          pwm_init(MotorA_P, MotorFre, 0);
   23   1      }
   24          
   25          void Motor_SpeedSet(int16 Duty_L,int16 Duty_R)
   26          {
   27   1      //  if  (!(Duty_R==0 && Duty_L==0))
   28   1      //  {
   29   1      //    Duty_L>0 ? Duty_L+=250 : Duty_L-=250;
   30   1      //    Duty_R>0 ? Duty_R+=750 : Duty_R-=750; 
   31   1      //  }
   32   1      
   33   1        
   34   1           if(Duty_L>MAXDUTY)
   35   1           {
   36   2               Duty_L=MAXDUTY;
   37   2           }
   38   1           if(Duty_R>MAXDUTY)
   39   1           {
   40   2               Duty_R=MAXDUTY;
   41   2           }
   42   1           if(Duty_L<-MAXDUTY)
   43   1           {
   44   2               Duty_L=-MAXDUTY;
   45   2           }
   46   1           if(Duty_R<-MAXDUTY)
   47   1           {
   48   2               Duty_R=-MAXDUTY;
   49   2           }
   50   1           
   51   1          if(Duty_L>=0)
   52   1          {
   53   2              pwm_duty(MotorB_N,0);
   54   2              pwm_duty(MotorA_N,Duty_L);
   55   2          }
   56   1          else if(Duty_L < 0)
   57   1          {
C251 COMPILER V5.60.0,  motor                                                              17/07/23  20:21:51  PAGE 2   

   58   2              pwm_duty(MotorB_N,-Duty_L);
   59   2              pwm_duty(MotorA_N,0);
   60   2          }
   61   1      
   62   1          if(Duty_R>=0)
   63   1          {
   64   2             pwm_duty(MotorA_P,Duty_R);
   65   2             pwm_duty(MotorB_P,0);
   66   2          }
   67   1          else if(Duty_R < 0)
   68   1          {
   69   2      
   70   2              pwm_duty(MotorA_P,0);
   71   2              pwm_duty(MotorB_P,-Duty_R);
   72   2          }
   73   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       342     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         8     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
