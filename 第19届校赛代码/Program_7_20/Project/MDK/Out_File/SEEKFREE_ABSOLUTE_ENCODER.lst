C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE SEEKFREE_ABSOLUTE_ENCODER
OBJECT MODULE PLACED IN .\Out_File\SEEKFREE_ABSOLUTE_ENCODER.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\..\Libraries\seekfree_peripheral\SEEKFREE_ABSOLUTE_ENCODER.c XSMALL
                    - INTR2 WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\.
                    -.\Libraries\seekfree_peripheral;..\CODE;..\USER\inc;..\USER\src) DEBUG PRINT(.\Out_File\SEEKFREE_ABSOLUTE_ENCODER.lst) T
                    -ABS(2) OBJECT(.\Out_File\SEEKFREE_ABSOLUTE_ENCODER.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2018,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：179029047
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          绝对式编码器
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ3184284598)
   13           * @Software    MDK FOR C251 V5.60
   14           * @Target core   STC32G12K128
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2020-01-13
   17           * @note    
   18                    接线定义：
   19                    ------------------------------------ 
   20                    模块管脚            单片机管脚
   21                    SCK             查看SEEKFREE_ABSOLUTE_ENCODER.H文件ABS_ENCODER_SPI_SCK_PIN 宏定义
   22                    MISO              查看SEEKFREE_ABSOLUTE_ENCODER.H文件ABS_ENCODER_SPI_MISO_PIN宏定义
   23                    MOSI                查看SEEKFREE_ABSOLUTE_ENCODER.H文件ABS_ENCODER_SPI_MOSI_PIN宏定义
   24                    CS                  查看SEEKFREE_ABSOLUTE_ENCODER.H文件ABS_ENCODER_SPI_PCS_PIN  宏定义
   25                    ------------------------------------  
   26           ********************************************************************************************************
             -************/
   27          
   28          #include "SEEKFREE_ABSOLUTE_ENCODER.h"
   29          #include "zf_spi.h"
   30          #include "zf_delay.h"
   31          
   32          
   33          //-------------------------以下为软件SPI--------------------------//
   34          //-------------------------以下为软件SPI--------------------------//
   35          //-------------------------以下为软件SPI--------------------------//
   36          
   37          //-------------------------------------------------------------------------------------------------------
             -------------
   38          //  @brief      内部使用用户无需关心
   39          //  @param      NULL              
   40          //  @return     void
   41          //  Sample usage:               无需用户调用，用户请使用h文件中的宏定义
   42          //-------------------------------------------------------------------------------------------------------
             -------------
   43          void encoder_delay_us(uint16 x)
   44          {
   45   1        delay_us(x);
   46   1      }
   47          
   48          
   49          //-------------------------------------------------------------------------------------------------------
             -------------
   50          //  @brief      通过SPI写一个byte,同时读取一个byte
   51          //  @param      byte        发送的数据    
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 2   

   52          //  @return     uint8       return 返回status状态
   53          //  @since      v1.0
   54          //  Sample usage:
   55          //-------------------------------------------------------------------------------------------------------
             -------------
   56          uint8 simspi_wr_byte(uint8 byte)
   57          {
   58   1          uint8 i;
   59   1          for(i=0; i<8; i++)
   60   1          {
   61   2              ABS_ENCODER_MOSI(byte & 0x80);
   62   2              byte <<= 1;
   63   2              ABS_ENCODER_SCK (0);    
   64   2            
   65   2              ABS_ENCODER_SCK (1);
   66   2          byte |= ABS_ENCODER_MISO;  
   67   2          } 
   68   1          return(byte);                                         
   69   1      }
   70          
   71          //-------------------------------------------------------------------------------------------------------
             -------------
   72          //  @brief      将val写入cmd对应的寄存器地址,同时返回status字节
   73          //  @param      cmd         命令字
   74          //  @param      val         待写入寄存器的数值
   75          //  @since      v1.0
   76          //  Sample usage:
   77          //-------------------------------------------------------------------------------------------------------
             -------------
   78          void simspi_w_reg_byte(uint8 cmd, uint8 val)
   79          {
   80   1          ABS_ENCODER_CSN (0);
   81   1          cmd |= ABS_ENCODER_SPI_W;
   82   1          simspi_wr_byte(cmd);                        
   83   1          simspi_wr_byte(val);                                
   84   1          ABS_ENCODER_CSN (1);                                      
   85   1      }
   86          
   87          //-------------------------------------------------------------------------------------------------------
             -------------
   88          //  @brief      读取cmd所对应的寄存器地址
   89          //  @param      cmd         命令字
   90          //  @param      *val        存储读取的数据地址
   91          //  @since      v1.0
   92          //  Sample usage:
   93          //-------------------------------------------------------------------------------------------------------
             -------------
   94          void simspi_r_reg_byte(uint8 cmd, uint8 *val)
   95          {
   96   1          ABS_ENCODER_CSN (0);
   97   1          cmd |= ABS_ENCODER_SPI_R;
   98   1          simspi_wr_byte(cmd);                                
   99   1          *val = simspi_wr_byte(0);                             
  100   1          ABS_ENCODER_CSN (1);                                      
  101   1      }
  102          
  103          
  104          //-------------------------------------------------------------------------------------------------------
             -------------
  105          //  @brief      写入一个数据到编码器的寄存器
  106          //  @param      cmd         寄存器地址
  107          //  @param      *val        写入数据的地址
  108          //  @return     uint8       0：程序  1：失败
  109          //  @since      v1.0
  110          //  Sample usage:
  111          //-------------------------------------------------------------------------------------------------------
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 3   

             -------------
  112          uint8 encoder_simspi_w_reg_byte(uint8 cmd, uint8 val)
  113          {
  114   1        
  115   1          uint8 dat;
  116   1          ABS_ENCODER_CSN (0);
  117   1          cmd |= ABS_ENCODER_SPI_W;
  118   1          simspi_wr_byte(cmd);                        
  119   1          simspi_wr_byte(val);                                
  120   1          ABS_ENCODER_CSN (1);   
  121   1          encoder_delay_us(1);
  122   1          ABS_ENCODER_CSN (0);
  123   1          dat = simspi_wr_byte(0x00);                       
  124   1          simspi_wr_byte(0x00);                                 
  125   1          ABS_ENCODER_CSN (1);  
  126   1          
  127   1          if(val != dat)  return 1;   //写入失败
  128   1          return 0;                   //写入成功
  129   1      }
  130          
  131          //-------------------------------------------------------------------------------------------------------
             -------------
  132          //  @brief      读取寄存器
  133          //  @param      cmd         寄存器地址
  134          //  @param      *val        存储读取的数据地址
  135          //  @return     void
  136          //  @since      v1.0
  137          //  Sample usage:
  138          //-------------------------------------------------------------------------------------------------------
             -------------
  139          void encoder_simspi_r_reg_byte(uint8 cmd, uint8 *val)
  140          {
  141   1          ABS_ENCODER_CSN (0);
  142   1          cmd |= ABS_ENCODER_SPI_R;
  143   1          simspi_wr_byte(cmd);                        
  144   1          simspi_wr_byte(0x00);                                 
  145   1          ABS_ENCODER_CSN (1);   
  146   1        encoder_delay_us(1);
  147   1          ABS_ENCODER_CSN (0);
  148   1          *val = simspi_wr_byte(0x00);                        
  149   1          simspi_wr_byte(0x00);                                 
  150   1          ABS_ENCODER_CSN (1);
  151   1      }
  152          
  153          //-------------------------------------------------------------------------------------------------------
             -------------
  154          //  @brief      设置零偏
  155          //  @param      zero_position  需要设置的零偏
  156          //  @return     void
  157          //  @since      v1.0
  158          //  Sample usage:
  159          //-------------------------------------------------------------------------------------------------------
             -------------
  160          void set_zero_position_simspi(uint16 zero_position)
  161          {    
  162   1          zero_position = (uint16)(4096 - zero_position);
  163   1          zero_position = zero_position << 4;
  164   1          encoder_simspi_w_reg_byte(ZERO_L_REG,(uint8)zero_position);//设置零位
  165   1          encoder_simspi_w_reg_byte(ZERO_H_REG,(uint8)(zero_position>>8));
  166   1      }
  167          
  168          //-------------------------------------------------------------------------------------------------------
             -------------
  169          //  @brief      写入一个数据到编码器的寄存器
  170          //  @param      void
  171          //  @return     uint16       返回角度值0-4096 对应0-360°
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 4   

  172          //  @since      v1.0
  173          //  Sample usage:
  174          //-------------------------------------------------------------------------------------------------------
             -------------
  175          uint16 encoder_angle_simspi(void)
  176          {
  177   1          uint16 angle;
  178   1      
  179   1          ABS_ENCODER_CSN (0);
  180   1          angle = simspi_wr_byte(0x00);      
  181   1          angle <<= 8;                    //存储高八位
  182   1          angle |= simspi_wr_byte(0x00);  //存储低八位
  183   1          ABS_ENCODER_CSN (1);   
  184   1          
  185   1          return (angle>>4);              //12位精度，因此右移四位                 
  186   1      }
  187          
  188          
  189          
  190          //-------------------------------------------------------------------------------------------------------
             -------------
  191          //  @brief      编码器自检函数
  192          //  @param      NULL
  193          //  @return     void          
  194          //  @since      v1.0
  195          //  Sample usage:       
  196          //-------------------------------------------------------------------------------------------------------
             -------------
  197          void encoder_self4_check(void)
  198          {
  199   1          uint8 val;
  200   1          do
  201   1          {
  202   2              encoder_simspi_r_reg_byte(6,&val);
  203   2        
  204   2              //卡在这里原因有以下几点
  205   2              //1 编码器坏了，如果是新的这样的概率极低
  206   2              //2 接线错误或者没有接好
  207   2          }while(0x1C != val);
  208   1      }
  209          
  210          //-------------------------------------------------------------------------------------------------------
             -------------
  211          //  @brief      编码器初始化函数
  212          //  @param      NULL
  213          //  @return     void          
  214          //  @since      v1.0
  215          //  Sample usage:       
  216          //-------------------------------------------------------------------------------------------------------
             -------------
  217          void encoder_init_simspi(void)
  218          {
  219   1          encoder_self4_check();          //自检
  220   1          
  221   1          encoder_simspi_w_reg_byte(DIR_REG,0x00);//设置旋转方向 正转数值变小：0x00   反转数值
             -变大：0x80
  222   1      
  223   1          set_zero_position_simspi(0);             //设置零偏
  224   1      }
  225          
  226          
  227          //-------------------------以上为软件SPI--------------------------//
  228          //-------------------------以上为软件SPI--------------------------//
  229          //-------------------------以上为软件SPI--------------------------//
  230          
  231          
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 5   

  232          //-------------------------以下为硬件SPI--------------------------//
  233          //-------------------------以下为硬件SPI--------------------------//
  234          //-------------------------以下为硬件SPI--------------------------//
  235          
  236          //-------------------------------------------------------------------------------------------------------
             -------------
  237          //  @brief      通过SPI写一个byte,同时读取一个byte
  238          //  @param      byte        发送的数据    
  239          //  @return     uint8       return 返回status状态
  240          //  @since      v1.0
  241          //  Sample usage:
  242          //-------------------------------------------------------------------------------------------------------
             -------------
  243          uint8 spi_wr_byte(uint8 byte)
  244          {  
  245   1        byte = spi_mosi(byte);
  246   1        return(byte);   
  247   1      }
  248          
  249          //-------------------------------------------------------------------------------------------------------
             -------------
  250          //  @brief      将val写入cmd对应的寄存器地址,同时返回status字节
  251          //  @param      cmd         命令字
  252          //  @param      val         待写入寄存器的数值
  253          //  @since      v1.0
  254          //  Sample usage:
  255          //-------------------------------------------------------------------------------------------------------
             -------------
  256          void spi_w_reg_byte(uint8 cmd, uint8 val)
  257          {
  258   1          ABS_ENCODER_SPI_CSN (0);
  259   1          cmd |= ABS_ENCODER_SPI_W;
  260   1          spi_wr_byte(cmd);                       
  261   1          spi_wr_byte(val);                                 
  262   1          ABS_ENCODER_SPI_CSN (1);       
  263   1      }
  264          
  265          //-------------------------------------------------------------------------------------------------------
             -------------
  266          //  @brief      读取cmd所对应的寄存器地址
  267          //  @param      cmd         命令字
  268          //  @param      *val        存储读取的数据地址
  269          //  @since      v1.0
  270          //  Sample usage:
  271          //-------------------------------------------------------------------------------------------------------
             -------------
  272          void spi_r_reg_byte(uint8 cmd, uint8 *val)
  273          {
  274   1          ABS_ENCODER_SPI_CSN (0);
  275   1          cmd |= ABS_ENCODER_SPI_R;
  276   1          spi_wr_byte(cmd);                                 
  277   1          *val = simspi_wr_byte(0);                             
  278   1          ABS_ENCODER_SPI_CSN (1);                                      
  279   1      }
  280          
  281          
  282          //-------------------------------------------------------------------------------------------------------
             -------------
  283          //  @brief      写入一个数据到编码器的寄存器
  284          //  @param      cmd         寄存器地址
  285          //  @param      *val        写入数据的地址
  286          //  @return     uint8       0：程序  1：失败
  287          //  @since      v1.0
  288          //  Sample usage:
  289          //-------------------------------------------------------------------------------------------------------
             -------------
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 6   

  290          uint8 encoder_spi_w_reg_byte(uint8 cmd, uint8 val)
  291          {
  292   1          uint8 dat;
  293   1          ABS_ENCODER_SPI_CSN (0);
  294   1          cmd |= ABS_ENCODER_SPI_W;
  295   1          spi_wr_byte(cmd);                       
  296   1          spi_wr_byte(val);                                 
  297   1          ABS_ENCODER_SPI_CSN (1);   
  298   1        encoder_delay_us(1);
  299   1          ABS_ENCODER_SPI_CSN (0);
  300   1          dat = spi_wr_byte(0x00);                        
  301   1          spi_wr_byte(0x00);                                
  302   1          ABS_ENCODER_SPI_CSN (1);  
  303   1          
  304   1          if(val != dat)  return 1;   //写入失败
  305   1          return 0;                   //写入成功
  306   1      }
  307          
  308          //-------------------------------------------------------------------------------------------------------
             -------------
  309          //  @brief      读取寄存器
  310          //  @param      cmd         寄存器地址
  311          //  @param      *val        存储读取的数据地址
  312          //  @return     void
  313          //  @since      v1.0
  314          //  Sample usage:
  315          //-------------------------------------------------------------------------------------------------------
             -------------
  316          void encoder_spi_r_reg_byte(uint8 cmd, uint8 *val)
  317          {
  318   1          ABS_ENCODER_SPI_CSN (0);
  319   1          cmd |= ABS_ENCODER_SPI_R;
  320   1          spi_wr_byte(cmd);                       
  321   1          spi_wr_byte(0x00);   
  322   1      
  323   1          ABS_ENCODER_SPI_CSN (1);   
  324   1        encoder_delay_us(1);
  325   1          ABS_ENCODER_SPI_CSN (0);
  326   1          *val = spi_wr_byte(0x00);                       
  327   1          spi_wr_byte(0x00);                                
  328   1          ABS_ENCODER_SPI_CSN (1);
  329   1      }
  330          
  331          //-------------------------------------------------------------------------------------------------------
             -------------
  332          //  @brief      设置零偏
  333          //  @param      zero_position  需要设置的零偏
  334          //  @return     void
  335          //  @since      v1.0
  336          //  Sample usage:
  337          //-------------------------------------------------------------------------------------------------------
             -------------
  338          void set_zero_position_spi(uint16 zero_position)
  339          {    
  340   1          zero_position = (uint16)(4096 - zero_position);
  341   1          zero_position = zero_position << 4;
  342   1          encoder_spi_w_reg_byte(ZERO_L_REG,(uint8)zero_position);//设置零位
  343   1          encoder_spi_w_reg_byte(ZERO_H_REG,(uint8)(zero_position>>8));
  344   1      }
  345          
  346          //-------------------------------------------------------------------------------------------------------
             -------------
  347          //  @brief      写入一个数据到编码器的寄存器
  348          //  @param      void
  349          //  @return     uint16       返回角度值0-4096 对应0-360°
  350          //  @since      v1.0
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 7   

  351          //  Sample usage:
  352          //-------------------------------------------------------------------------------------------------------
             -------------
  353          uint16 encoder_angle_spi(void)
  354          {
  355   1          uint16 angle;
  356   1          ABS_ENCODER_SPI_CSN (0);
  357   1          angle = (uint16)spi_wr_byte(0x00);      
  358   1          angle <<= 8;                    //存储高八位
  359   1          angle |= (uint16)spi_wr_byte(0x00);  //存储低八位
  360   1          ABS_ENCODER_SPI_CSN (1);   
  361   1          
  362   1          return (angle>>4);              //12位精度，因此右移四位                 
  363   1      }
  364          
  365          
  366          //-------------------------------------------------------------------------------------------------------
             -------------
  367          //  @brief      编码器自检函数
  368          //  @param      NULL
  369          //  @return     void          
  370          //  @since      v1.0
  371          //  Sample usage:       
  372          //-------------------------------------------------------------------------------------------------------
             -------------
  373          void encoder_self5_check(void)
  374          {
  375   1        uint8 val;
  376   1          do
  377   1          {
  378   2              encoder_spi_r_reg_byte(6,&val);
  379   2              //卡在这里原因有以下几点
  380   2              //1 编码器坏了，如果是新的这样的概率极低
  381   2              //2 接线错误或者没有接好
  382   2          }while(0x1C != val);
  383   1      }
  384          
  385          //-------------------------------------------------------------------------------------------------------
             -------------
  386          //  @brief      编码器初始化函数
  387          //  @param      NULL
  388          //  @return     void          
  389          //  @since      v1.0
  390          //  Sample usage:       
  391          //-------------------------------------------------------------------------------------------------------
             -------------
  392          void encoder_init_spi(void)
  393          {
  394   1        spi_init(ABS_ENCODER_SPI_NUM, ABS_ENCODER_SPI_SCK_PIN, ABS_ENCODER_SPI_MOSI_PIN,ABS_ENCODER_SPI_MISO_PIN
             -, 0, MASTER, SPI_SYSclk_DIV_4);
  395   1      
  396   1        encoder_self5_check();
  397   1        encoder_spi_w_reg_byte(DIR_REG,0x00);//设置旋转方向 正转数值变小：0x00   反转数值变大
             -：0x80
  398   1        set_zero_position_spi(0);                   //设置零偏
  399   1      }
  400          
  401          
  402          //-------------------------以上为硬件SPI--------------------------//
  403          //-------------------------以上为硬件SPI--------------------------//
  404          //-------------------------以上为硬件SPI--------------------------//


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       883     ------
  ecode size           =    ------     ------
C251 COMPILER V5.60.0,  SEEKFREE_ABSOLUTE_ENCODER                                          16/11/23  12:59:55  PAGE 8   

  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        45     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
